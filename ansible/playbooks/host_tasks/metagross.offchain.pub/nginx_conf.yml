---
- name: strfry | Configure nginx
  ansible.builtin.import_role:
    name: nginx_core.nginx_config
  vars:
    nginx_config_http_template_enable: true
    nginx_config_http_template:
      - template_file: http/default.conf.j2
        deployment_location: "/etc/nginx/conf.d/strfry_{{ nginx_strfry_domain }}.conf"
        backup: false
        config:
          upstreams:
            - name: strfry
              servers:
                - address: "127.0.0.1:{{ strfry_relay.port|default(7777) }}"
               #- address: unix:/var/lib/strfry/strfry.sock
          servers:
            - core:
                listen:
                  - address: "{{ default_interface_ipv4_address|default(ansible_default_ipv4.address) }}:{{ nginx_strfry_https_port|default(443) }} ssl"
                include:
                  - "/etc/nginx/acme_{{ nginx_strfry_domain }}.conf"
                client_max_body_size: 0 # Stream request body to backend
              locations:
                - location: /
                  proxy:
                    pass: http://strfry
                    http_version: '1.1'
                    set_header:
                      - field: Host
                        value: $http_host
                      - field: Connection
                        value: $connection_upgrade
                      - field: Upgrade
                        value: $http_upgrade
                      - field: X-Forwarded-For
                        value: $proxy_add_x_forwarded_for
                    connect_timeout: 3m
                    send_timeout: 3m
                    read_timeout: 3m
                - location: /metrics
                  proxy:
                    pass: "http://127.0.0.1:{{ strfry_relay_metrics_port|default(8034) }}"
                    set_header:
                      - field: Host
                        value: $http_host

      - template_file: http/default.conf.j2
        deployment_location: /etc/nginx/http.conf
        backup: false
        config:
          core:
            default_type: application/octet-stream
            sendfile: true
            server_tokens: false
            tcp_nodelay: true
            tcp_nopush: true
            resolver: # required for oscp stapling
              address: 
              - '1.1.1.1'
              - '8.8.8.8'
            resolver_timeout: 10s
          log:
            format:
              - name: main
                format: |
                  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"  "$realip_remote_addr"'
    #         - name: debugposts
    #           format: |
    #             '$remote_addr - $remote_user [$time_local] "$request" '
    #             '$status $body_bytes_sent "$http_referer" '
    #             '"$http_user_agent" "$http_x_forwarded_for"  "$realip_remote_addr"'
    #             '"$request_data"'
          gzip: # https://nginx.org/en/docs/http/ngx_http_gzip_module.html
            enable: true
            comp_level: 3
            disable: "msie6"
            min_length: 1100
            proxied: any
            types:
              - text/plain
              - text/css 
              - application/x-javascript 
              - text/xml 
              - application/xml
            vary: true

      - template_file: http/default.conf.j2
        deployment_location: "/etc/nginx/conf.d/mappings.conf"
        backup: false
        config:
          map:
            mappings: # https://nginx.org/en/docs/http/websocket.html
              - string: $http_upgrade
                variable: $connection_upgrade
                content:
                  - value: default
                    new_value: upgrade
                  - value: "''"
                    new_value: close

#         - template_file: http/default.conf.j2
  #           deployment_location: "/etc/nginx/conf.d/default.conf"
#           backup: false
#           config:
#             servers:
#               - core:
#                   server_name: _
#                   listen:
#                     - address: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}:80"
#                 locations:
#                   - location: /
#                     rewrite:
#                       return:
#                         code: 404

