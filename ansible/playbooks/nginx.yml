---
- hosts: squirtle.brenise.com

# roles:
#   - role: nginxinc.nginx_core.nginx

  tasks:
    - name: Configure nginx for Archlinux (rm PID, chg user, incr types_hash_max_size)
      ansible.builtin.import_role:
        name: nginxinc.nginx_core.nginx_config
      tags: nginx
      become: true
      vars:
        # https://github.com/nginxinc/ansible-role-nginx-config/blob/main/defaults/main/template.yml
        nginx_config_main_template_enable: true
        nginx_config_main_template:
          template_file: nginx.conf.j2
          deployment_location: /etc/nginx/nginx.conf
          backup: false
          config: # https://nginx.org/en/docs/ngx_core_module.html
            main:
              user:
                username: http
              worker_processes: auto
              error_log:
                file: /var/log/nginx/error.log
                level: notice
#             pid: /var/run/nginx.pid
              # worker_rlimit_nofile = worker_connections * 2
              worker_rlimit_nofile: "{{ nginx_worker_rlimit_noprofile | default(omit) }}"
            events:
              worker_connections: "{{ nginx_worker_connections | default('1024') }}"
            http: # https://nginx.org/en/docs/http/ngx_http_core_module.html
              default_type: application/octet-stream
              sendfile: true
              server_tokens: false
              tcp_nodelay: true
              tcp_nopush: true
              include:
                - /etc/nginx/mime.types
                - /etc/nginx/http.conf    # These are shared http level configs that nginx_conf refuses to directly configure.
                - /etc/nginx/conf.d/*.conf

        # Each dictionary in the top level list/array represents a new configuration file.
        nginx_config_http_template_enable: true
        nginx_config_http_template:
          - template_file: http/default.conf.j2
            deployment_location: /etc/nginx/http.conf
            backup: false
            config:
              core:
                default_type: application/octet-stream
                sendfile: true
                server_tokens: false
                tcp_nodelay: true
                tcp_nopush: true
                resolver: # required for oscp stapling
                  address: 
                  - '1.1.1.1'
                  - '8.8.8.8'
                resolver_timeout: 10s
                types_hash_max_size: 3072
              log:
                format:
                  - name: main
                    format: |
                      '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"  "$realip_remote_addr"'
        #         - name: debugposts
        #           format: |
        #             '$remote_addr - $remote_user [$time_local] "$request" '
        #             '$status $body_bytes_sent "$http_referer" '
        #             '"$http_user_agent" "$http_x_forwarded_for"  "$realip_remote_addr"'
        #             '"$request_data"'
              gzip: # https://nginx.org/en/docs/http/ngx_http_gzip_module.html
                enable: true
                comp_level: 3
                disable: "msie6"
                min_length: 1100
                proxied: any
                types:
                  - text/plain
                  - text/css 
                  - application/x-javascript 
                  - text/xml 
                  - application/xml
                vary: true

# TODO
#server {
#    listen 192.168.0.42:443 ssl default_server;
#    server_name _;
#
#    ssl_certificate     /var/acme/default/self-signed.crt;
#    ssl_certificate_key /var/acme/default/default.key;
#    ssl_dhparam         /var/acme/dhparam.pem;
#    ssl_session_cache   shared:nginxSSL:10m;
#    ssl_ecdh_curve      X25519:secp521r1:secp384r1;
#
#    return 401;
#}

#         - template_file: http/default.conf.j2
#           deployment_location: "/etc/nginx/conf.d/default.conf"
#           backup: false
#           config:
#             servers:
#               - core:
#                   server_name: _
#                   listen:
#                     - address: "{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}:80"
#                 locations:
#                   - location: /
#                     rewrite:
#                       return:
#                         code: 401