---
- name: Start chat-with-gpt container using inline definition
  register: output
  containers.podman.podman_container:
    name: chat-with-gpt
    image: "ghcr.io/cogentapps/chat-with-gpt:{{ chat_with_gpt_version }}"
    # let systemd start the container or it won't see it running
    state: stopped
    ports:
      - "127.0.0.1:{{ chat_with_gpt_http_port }}:3000"
    volumes:
      - /var/compose/chat-with-gpt/data:/app/data

- ansible.builtin.debug:
    var: output

- name: Generate systemd unit file for chat-with-gpt container
  containers.podman.podman_generate_systemd:
    name: chat-with-gpt
    dest: ~/.config/systemd/user/
    restart_policy: on-failure
    restart_sec: 60

- name: chat-with-gpt | Ensure container(s) are enabled in systemd, but stopped so we can use "recreate" in podman_container.
  ansible.builtin.systemd:
    name: container-chat-with-gpt
    scope: user
    daemon_reload: true
    state: stopped
    enabled: true

- name: chat-with-gpt | Started the container(s) with systemd, so systemd will know the state of the container(s) moving forward.
  ansible.builtin.systemd:
    name: container-chat-with-gpt
    scope: user
    state: started